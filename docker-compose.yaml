# This file extends the base Docker Compose files to make manual testing easy.
#
# Run the following to get started:
#
#     docker compose up -d
#
# That will start up services in the background. To take them down, you have to
# run:
#
#     docker compose down
#
# If you changed DB init scripts, then you should also run:
#
#     docker compose down -v
#
# That'll delete the volumes. Otherwise e.g. PostgreSQL will skip initializing
# if a DB already exists.
#
# If you omit `-d`, it'll run them all in the foreground, then you can stop them
# with your usual Ctrl-C terminal command.
#
# Facts:
#
# * The SERVICE PORTS numbering start at 32123, 32122 etc. to avoid other
#   existing instances of databases.
#
# * The login credentials are, where possible, all "aigent" to avoid unnecessary
#   mental overhead.

version: "3.6"
services:
  postgres:
    image: postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: "leaptable"
      POSTGRES_PASSWORD: "leaptable"
      POSTGRES_DB: "leaptable"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data

  hasura:
    image: hasura/graphql-engine:v2.30.0
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres@postgres:5432/hasura

  api:
      image: leaptable/leaptable:latest
      restart: always
      command: [ "uvicorn", "leaptable.server.main:app" ]
      env_file:
        - .env.local
      ports:
        - 43000:8000

  studio:
    image: leaptable/leaptable-studio:latest
    restart: always
    depends_on:
      - postgres
      - hasura
    env_file:
      - .env.local
    ports:
      - 43001:3000

  agent-browser:
    image: leaptable/leaptable-engine:latest
    restart: always
    command: [ "python", "leaptable/agents/browser/main.py" ]
    depends_on:
      - redis
      - postgres
    environment:
      REDIS_STREAM_HOST: "redis"
      REDIS_CACHE_HOST: "redis"
    env_file:
      - .env.local

  agent-serpapi:
    image: leaptable/leaptable-engine:latest
    restart: always
    command: [ "python", "leaptable/agents/serp/main.py" ]
    depends_on:
      - redis
      - postgres
    environment:
      REDIS_STREAM_HOST: "redis"
      REDIS_CACHE_HOST: "redis"
    env_file:
      - .env.local

  tool-browser:
    image: leaptable/leaptable-engine:latest
    restart: always
    command: [ "python", "leaptable/tools/browser/main.py" ]
    depends_on:
      - redis
      - postgres
    environment:
      REDIS_STREAM_HOST: "redis"
      REDIS_CACHE_HOST: "redis"
    env_file:
      - .env.local

  tool-serpapi:
    image: leaptable/leaptable-engine:latest
    restart: always
    command: [ "python", "leaptable/tools/serp/main.py" ]
    depends_on:
      - redis
      - postgres
    environment:
      REDIS_STREAM_HOST: "redis"
      REDIS_CACHE_HOST: "redis"
    env_file:
      - .env.local

volumes:
  postgres-data:
  leaptable-data: